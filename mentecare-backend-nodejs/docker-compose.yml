version: '3.8'

services:
  mentecare-backend:
    build: .
    container_name: mentecare-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./database:/app/database
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - mentecare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: mentecare-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mentecare-backend
    networks:
      - mentecare-network

  # PostgreSQL (para produção - opcional)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: mentecare-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: mentecare
  #     POSTGRES_USER: mentecare_user
  #     POSTGRES_PASSWORD: secure_password_here
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   networks:
  #     - mentecare-network
  #   ports:
  #     - "5432:5432"

  # Redis para cache (opcional)
  # redis:
  #   image: redis:7-alpine
  #   container_name: mentecare-redis
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - mentecare-network
  #   ports:
  #     - "6379:6379"

networks:
  mentecare-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

